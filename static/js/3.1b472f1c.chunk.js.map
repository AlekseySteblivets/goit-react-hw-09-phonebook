{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","redux/phonebooks/phonebooks-selectors.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/ContactForm/ContactForm.js","redux/phonebooks/phonebooks-operations.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/Contacts.js"],"names":["module","exports","getIsloadingContacts","state","contacts","loading","getFilter","filter","getItems","items","getVisibleContacts","createSelector","allContacts","filterNormalize","toLowerCase","contact","name","includes","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","arguments","v4","options","buf","rnds","random","initialFormState","number","ContactForm","inputId","uuidv4","useState","formData","setFormData","dispatch","useDispatch","useSelector","handleInputChange","evt","console","log","currentTarget","prevState","reset","className","styles","container","onSubmit","preventDefault","find","alert","phonebooksActions","axios","post","then","data","catch","error","message","form","htmlFor","label","type","pattern","title","required","onChange","id","Filter","e","changeFilter","ContactList","map","contactList","onClick","delete","Contacts","isloadingContacts","useEffect","a","get"],"mappings":"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","file":"static/js/3.1b472f1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__1loyQ\",\"label\":\"ContactForm_label__2j6V6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2_qwD\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getIsloadingContacts = state => state.contacts.loading;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getItems = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector(\n    [getItems, getFilter],\n    (allContacts, filter) => {\n        const filterNormalize = filter.toLowerCase();\n        return allContacts.filter(contact =>\n            contact.name.toLowerCase().includes(filterNormalize),\n        );\n\n    }\n)\n\n\n// export const getVisibleContacts = state => {\n//     const allContacts = getItems(state);\n//     const filter = getFilter(state);\n//     const filterNormalize = filter.toLowerCase();\n\n//     return allContacts.filter(contact =>\n//         contact.name.toLowerCase().includes(filterNormalize),\n//     );\n// }","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getItems, addContact } from '../../redux/phonebooks';\n\n\nconst initialFormState = {\n    name: '',\n    number: '',\n}\n\nexport default function ContactForm() {\n    const inputId = uuidv4();\n    // state = {\n    //     name: '',\n    //     number: '',\n\n    // };\n\n    const [formData, setFormData] = useState(initialFormState)\n    // const [name, setName] = useState('');\n    // const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(getItems);\n\n\n    const handleInputChange = evt => {\n        console.log(evt.currentTarget.value);\n        const { name, value } = evt.currentTarget;\n        // setName(name);\n        setFormData((prevState) => ({ ...prevState, [name]: value }));\n    };\n\n\n    // const handleInputChangeNumber = evt => {\n\n    //     const number = evt.currentTarget.value;\n    //     setNumber(number);\n    //     // setNumber({ [name]: value });\n    // };\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        const { name, number } = formData\n        const findContact = contacts.find(contact => contact.name === name && contact.number === number);\n\n        if (findContact) {\n            alert(`${name} is already in contacts!`);\n            reset();\n            return;\n        }\n        dispatch(addContact(formData))\n        // this.props.addContact(name, number);\n        reset();\n    }\n    const reset = () => {\n        // setName('');\n        // setNumber('');\n        setFormData(initialFormState);\n\n    };\n\n    return (\n\n        <div className={styles.container}>\n            <form onSubmit={handleSubmit} className={styles.form}>\n                <label htmlFor={inputId} className={styles.label}>\n\n                    Name:\n\n                    <input\n                        className=\"Container-form__input\"\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        value={formData.name}\n                        onChange={handleInputChange}\n                        id={inputId}\n                    />\n                </label>\n                <label className={styles.label}>\n                    Number:\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        value={formData.number}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </label>\n\n                <button type=\"submit\" className=\"Container-form__btn\">Add Contact</button>\n            </form>\n        </div>\n    )\n};\n\n\n// const mapStateToProps = state => ({\n//     contacts: getItems(state),\n// });\n// const mapDispatchToProps = dispatch => ({\n//     addContact: (name, number) => dispatch(addContact(name, number)),\n\n// })\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import axios from 'axios';\nimport * as phonebooksActions from './phonebooks-actions';\n\n// axios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContact = () => async dispatch => {\n    dispatch(phonebooksActions.fetchContactRequest());\n\n    try {\n        const { data } = await axios.get('./contacts');\n        dispatch(phonebooksActions.fetchContactSuccess(data));\n    } catch (error) {\n        dispatch(phonebooksActions.fetchContactError(error.message));\n    }\n    // axios\n    //     .get('./contacts')\n    //     .then(({ data }) => dispatch(phonebooksActions.fetchContactSuccess(data)))\n    //     .catch(error => dispatch(phonebooksActions.fetchContactError(error)));\n}\n\nexport const addContact = (contact) => dispatch => {\n    // const contact = {\n    //     name,\n    //     number,\n    // };\n    dispatch(phonebooksActions.addContactRequest());\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) =>\n            dispatch(phonebooksActions.addContactSuccess(data)))\n        .catch(error => dispatch(phonebooksActions.addContactError(error.message)));\n};\n\nexport const deleteContact = id => dispatch => {\n    dispatch(phonebooksActions.deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${id}`)\n        .then(() => dispatch(phonebooksActions.deleteContactSuccess(id)))\n        .catch(error => dispatch(phonebooksActions.deleteContactError(error.message)));\n\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import styles from './Filter.module.css';\n// import PropTypes from 'prop-types';\nimport { getFilter, changeFilter } from '../../redux/phonebooks';\n\nexport default function Filter() {\n    const dispatch = useDispatch();\n    const value = useSelector(getFilter);\n    const оnChange = e => dispatch(changeFilter(e.currentTarget.value));\n    return (\n        <label>\n            FInd contacts by name\n            <input\n                type=\"text\"\n                value={value}\n                onChange={оnChange}\n            />\n        </label>\n    )\n};\n\n// Filter.propTypes = {\n//     value: PropTypes.string.isRequired,\n// }\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getVisibleContacts, deleteContact } from '../../redux/phonebooks';\r\n\r\nexport default function ContactList() {\r\n    const contacts = useSelector(getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"Contact-container\">\r\n            <ul >\r\n                {contacts.map(contact => (\r\n                    <li className={styles.contactList} key={uuidv4()}>{contact.name} : {contact.number}\r\n                        <button onClick={() => dispatch(deleteContact(contact.id))} >Delete</button>\r\n                    </li>))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nContactList.propTypes = {\r\n    contact: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n            id: PropTypes.string.isRequired,\r\n\r\n        })\r\n    ),\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//     contacts: getVisibleContacts(state),\r\n// });\r\n\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     onDeleteContact: id => dispatch(deleteContact(id)),\r\n\r\n// });\r\n\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getIsloadingContacts, fetchContact } from '../redux/phonebooks';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\n\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isloadingContacts = useSelector(getIsloadingContacts);\n    useEffect(() => { dispatch(fetchContact()) }, [dispatch]);\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <ContactForm />\n\n            <h2>Contacts</h2>\n            <Filter />\n            {isloadingContacts && <h1>loading...</h1>}\n            <ContactList />\n\n        </div>\n    )\n}\n"],"sourceRoot":""}